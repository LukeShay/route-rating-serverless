name: CI
on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: make lint
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - run: yarn --disable-progress
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: JWT_SECRET=${{ secrets.JWT_SECRET }} REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} make ut
  deploy-dev:
    needs:
    - lint
    - test
    runs-on: ubuntu-latest
    name: Deploy dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: us-east-2
    - run: yarn --disable-progress
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: JWT_SECRET=${{ secrets.JWT_SECRET }} REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} make generate-secrets
    - run: |
        JWT_SECRET=${{ secrets.JWT_SECRET }} \
        REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
        DATABASE_URL=${{ secrets.DATABASE_URL }} \
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
        yarn serverless deploy -s dev
  integration-test-remote:
    runs-on: ubuntu-latest
    needs:
    - deploy-dev
    name: Integration test remote
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: us-east-2
    - run: yarn --disable-progress
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: |
        JWT_SECRET=${{ secrets.JWT_SECRET }} \
        REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
        TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
        TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
        TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
        DATABASE_URL=${{ secrets.DATABASE_URL }} \
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
        make itr
  deploy-prod:
    if: github.ref == 'refs/heads/master'
    needs:
    - integration-test-remote
    runs-on: ubuntu-latest
    name: Deploy prod
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: us-east-2
    - run: yarn --disable-progress
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: |
        JWT_SECRET=${{ secrets.JWT_SECRET }} \
        REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
        DATABASE_URL=${{ secrets.DATABASE_URL }} \
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
        yarn serverless deploy -s prod
  smoke-test:
    runs-on: ubuntu-latest
    needs:
    - deploy-prod
    name: Smoke test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        aws-region: us-east-2
    - run: yarn --disable-progress
    - run: pip install -Ur requirements.txt -Ur requirements.dev.txt
    - run: |
        JWT_SECRET=${{ secrets.JWT_SECRET }} \
        REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
        TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
        TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
        TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
        DATABASE_URL=${{ secrets.DATABASE_URL }} \
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
        make smoke-test
