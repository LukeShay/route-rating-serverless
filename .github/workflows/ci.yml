name: CI
on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFREST_SECRET: ${{ secrets.REFREST_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: make lint
  unit-test:
    runs-on: ubuntu-latest
    name: Unit test
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFREST_SECRET: ${{ secrets.REFREST_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make unit-tests
  integration-test:
    runs-on: ubuntu-latest
    name: Integration test
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFREST_SECRET: ${{ secrets.REFREST_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make integration-tests
  deploy:
    needs: [lint, unit-test, integration-test]
    runs-on: ubuntu-latest
    name: Integration test
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make generate-secrets
      - uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
