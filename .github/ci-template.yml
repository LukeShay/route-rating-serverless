name: CI
on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFREST_SECRET: ${{ secrets.REFREST_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: make lint
  unit-test:
    runs-on: ubuntu-latest
    name: Unit test
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFREST_SECRET: ${{ secrets.REFREST_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make unit-tests
  integration-test:
    runs-on: ubuntu-latest
    name: Integration test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
          TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
          TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
          make integration-tests
  deploy-dev:
    needs: [lint, unit-test, integration-test]
    runs-on: ubuntu-latest
    name: Deploy dev
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make generate-secrets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - run: yarn serverless deploy -s dev
  integration-test-remote:
    runs-on: ubuntu-latest
    needs: [deploy-dev]
    name: Integration test remote
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
          TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
          TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
          make itegration-tests-remote
  deploy-prod:
    needs: [integration-test-remote]
    runs-on: ubuntu-latest
    name: Deploy prod
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: JWT_SECRET=${{ env.JWT_SECRET }} REFRESH_SECRET=${{ env.REFRESH_SECRET }} make generate-secrets
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - run: yarn serverless deploy -s prod
  smoke-test:
    runs-on: ubuntu-latest
    needs: [deploy-prod]
    name: Smoke test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: pip install -Ur requirements.txt
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
          TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
          TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
          make smoke-test
